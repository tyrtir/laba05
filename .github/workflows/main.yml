name: CI/CD Pipeline with Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CC: gcc-9
  CXX: g++-9

jobs:
  build-test-coverage:
    name: Build, Test & Coverage
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-9 g++-9 \
          lcov \
          cmake \
          valgrind
        
    - name: Configure build
      run: |
        mkdir -p _build
        cd _build
        cmake \
          -DCOVERAGE=ON \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_C_COMPILER=${{env.CC}} \
          -DCMAKE_CXX_COMPILER=${{env.CXX}} \
          ..
        
    - name: Build project
      working-directory: _build
      run: |
        cmake --build . --config ${{env.BUILD_TYPE}} --parallel $(nproc)
        
    - name: Run unit tests
      working-directory: _build
      run: |
        ./RunTest --gtest_output=xml:test_results.xml
        
    - name: Run memory check
      working-directory: _build
      run: |
        valgrind --leak-check=full --error-exitcode=1 ./RunTest
        
    - name: Generate coverage data
      working-directory: _build
      run: |
        lcov --capture \
             --directory . \
             --output-file coverage.info \
             --rc lcov_branch_coverage=1 \
             --no-external

        lcov --remove coverage.info \
             '*/usr/include/*' \
             '*/googletest/*' \
             '*/test/*' \
             '*/external/*' \
             --output-file filtered.info
        
        genhtml filtered.info \
                --output-directory coverage \
                --title "$GITHUB_REPOSITORY Coverage" \
                --branch-coverage \
                --legend
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: _build/test_results.xml
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: _build/coverage
        
    - name: Upload coverage data
      uses: codecov/codecov-action@v4
      with:
        file: _build/filtered.info
        flags: unittests
        verbose: true
